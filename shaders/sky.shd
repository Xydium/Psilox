VERTEX:

#version 400

in vec3 pos;

void main() {
	gl_Position = projection_transform * vec4(pos, 1);
}

FRAGMENT:

#version 400

uniform vec4 color;
uniform float time;
uniform float threshold;

out vec4 frag;

float rand(float n) {
	return fract(sin(n) * 43758.5453123);
}

float noise(float p) {
	float fl = floor(p);
	float fc = fract(p);
	return mix(rand(fl), rand(fl + 1.0), fc);
}

void main() {
	float noise = noise(gl_FragCoord.x * gl_FragCoord.y);
	if(noise > threshold) {
		float ntime = time * noise * rand(gl_FragCoord.x) * rand(gl_FragCoord.y);
		frag = vec4(mod(noise * 10, 1) + -.2, mod(noise * 50, 1) + .3, mod(noise * 100, 1) + .5, sin(sin(ntime - gl_FragCoord.y) * cos(ntime + gl_FragCoord.x)));
	} else {
		frag = color;
	}
}